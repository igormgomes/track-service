service: track-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    TRACK_TABLE_NAME: ${self:custom.TrackTable.name}
  iamRoleStatements:
    - ${file(iam/TrackTableIAM.yml):TrackTableIAM}
    - ${file(iam/TrackSQSIAM.yml):TrackSQSIAM}
    - ${file(iam/TrackSNSIAM.yml):TrackSNSIAM}

resources:
  Resources:
    TrackTable: ${file(resources/TrackTable.yml):TrackTable}
    DispatchTrackSQS: ${file(resources/DispatchTrackSQS.yml):DispatchTrackSQS}
    MailTrackSQS: ${file(resources/MailTrackSQS.yml):MailTrackSQS}
    TrackSNS: ${file(resources/TrackSNS.yml):TrackSNS}

functions:
  createTrack:
    handler: src/handlers/createTrack.handler
    events:
      - http:
          method: POST
          path: /track
          cors: true

  getTrackById:
    handler: src/handlers/getTrackById.handler
    events:
      - http:
          method: GET
          path: /track/{id}
          cors: true

custom:
  TrackTable:
    name: !Ref TrackTable
    arn: !GetAtt TrackTable.Arn
  DispatchTrackSQS:
    name: !Ref DispatchTrackSQS
    arn: !GetAtt DispatchTrackSQS.Arn
  MailTrackSQS:
    name: !Ref MailTrackSQS
    arn: !GetAtt MailTrackSQS.Arn
  TrackSNS:
    arn: !Ref TrackSNS
  bundle:
    linting: false